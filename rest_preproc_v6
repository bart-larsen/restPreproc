#!/bin/bash

#preprocess rest functinal
#normalize to MNI brain
#added afni's anaticor method to remove local nuisance signals
#convert to bash
#12-08-2011

#'Mapping sources of correlation in resting state FMRI, with 
# artifact detection and removal'
#       Jo, et al., Neuroimage, Vol 52 (2), 571-582, 2010.
#       [http://dx.doi.org/10.1016/j.neuroimage.2010.04.246]


cwd=$(pwd)



#for s in $(ls -d 1*); do
for s in 10616; do

		#
		# Step 0.1. Create nuisance regressors from Freesurfer segementation
		#
		
		cd ${cwd}/${s}/
		
		# clean up previous outputs, make mprage folder
		rm -rf mprage_v6
		mkdir mprage_v6

		cd /Volumes/Serena/Rest/FS_Subjects/${s}/mri
		
		# move freesurfer segmentation files to mrpage folder
		mri_convert brainmask.mgz mprage_bet.nii.gz
		
		mri_convert T1.mgz mprage.nii.gz
		
		mv mprage_bet.nii.gz ${cwd}/${s}/mprage_v6/
		
		mv mprage.nii.gz ${cwd}/${s}/mprage_v6/
		
		mri_convert aseg.mgz aseg.nii.gz
		
		mv aseg.nii.gz ${cwd}/${s}/mprage_v6/
	
		cd ${cwd}/${s}/mprage_v6/
		
		# deoblique and switch to RPI orientation for both func and anat files
		3dcopy ${cwd}/${s}/rest/all.nii.gz ./rest_epi
		
		3dresample -orient RPI -prefix rest_epi_RPI -inset rest_epi+orig
		
		#3dWarp -deoblique -prefix rest_epi_do rest_epi_RPI+orig
		
		3dcopy mprage_bet.nii.gz brain_bet
		
		3dresample -orient RPI -prefix brain_RPI -inset brain_bet+orig
		
		3dresample -master rest_epi_RPI+orig -prefix brain_RPI_res -inset brain_RPI+orig
		
		3dcopy mprage.nii.gz mprage
		
		3dresample -orient RPI -prefix mprage_RPI -inset mprage+orig
		
		3dcopy aseg.nii.gz aseg
		
		3dresample -orient RPI -prefix aseg_RPI -inset aseg+orig
		
			
		# resample strctural masks to EPI resolution, and create WM, Ventricals, Non-brain-tissue(NBT) and GM masks, commented out in v5 because will be handeled in @ANATICOR
		3dcalc -a aseg_RPI+orig -expr 'amongst(a,2,7,41,46,77,78,79)' -prefix WM
		
		3dresample -master rest_epi_RPI+orig -inset WM+orig -prefix WM_res
		
		3dcalc -a aseg_RPI+orig -expr 'amongst(a,4,5,14,15,43,44)' -prefix Vent
		
		3dresample -master rest_epi_RPI+orig -inset Vent+orig -prefix Vent_res
		
		3dcalc -a aseg_RPI+orig -expr 'amongst(a,3,8,10,11,12,13,17,18,26,28)' -prefix GM_L
		
		3dresample -master rest_epi_RPI+orig -inset GM_L+orig -prefix GM_L_res
		
		3dcalc -a aseg_RPI+orig -expr 'amongst(a,42,47,49,50,51,52,53,54,58,60)' -prefix GM_R
		
		3dresample -master rest_epi_RPI+orig -inset GM_R+orig -prefix GM_R_res
		
		3dcalc -a aseg_RPI+orig -expr 'amongst(a,16)' -prefix BS
		
		3dresample -master rest_epi_RPI+orig -inset BS+orig -prefix BS_res
		
		3dcalc -a brain_RPI_res+orig -b WM_res+orig -c Vent_res+orig -d GM_L_res+orig -e GM_R_res+orig -f BS_res+orig -expr '(a/a)-(b+c+d+e+f)' -prefix NBT_res
		
		# erode masks by 1 voxel to reduce partial volume effect
		3dcalc -a WM_res+orig -b a+i -c a-i -d a+j -e a-j -f a+k -g a-k -expr 'a*(1-amongst(0,b,c,d,e,f,g))' -prefix WM_erod
		
		# after some test dont erode Ventrical masks, as no voxels will survive
		3dcalc -a Vent_res+orig -b a+i -c a-i -d a+j -e a-j -f a+k -g a-k -expr 'a*(1-amongst(0,b,c,d,e,f,g))' -prefix Vent_erod
		
		3dcalc -a NBT_res+orig -b a+i -c a-i -d a+j -e a-j -f a+k -g a-k -expr 'a*(1-amongst(0,b,c,d,e,f,g))' -prefix NBT_erod
		
		
		#align structural and masks to EPI
		align_epi_anat.py -anat brain_RPI+orig -epi rest_epi_RPI+orig -epi_strip None -epi_base 5 -anat2epi -anat_has_skull no -tshift off -child_anat mprage_RPI+orig aseg_RPI+orig GM_L_res+orig GM_R_res+orig brain_RPI_res+orig WM_erod+orig Vent_res+orig NBT_erod+orig
		
		3dresample -master rest_epi_RPI+orig -inset brain_RPI_al+orig -prefix brain_RPI_al_res
		
		#extract regressors
		#3dmaskave -mask Vent_erod+orig. -q rest_epi_RPI+orig > Vent.1D
		
		#3dmaskave -mask WM_erod_al+orig. -q rest_epi_RPI+orig > WM.1D
		
		#3dmaskave -mask Vent_res_al+orig. -q rest_epi_RPI+orig > Vent.1D
		
		3dmaskave -mask NBT_erod_al+orig. -q rest_epi_RPI+orig > NBT.1D
		
		
		#
		# Step 1. normalize mprage to 2mm mni template
		#
		
		cd ${cwd}/${s}/mprage_v6/
		
		# use alinged structurals from previous step
		# Chage to RPI
		3dresample -orient RPI -prefix mprage_bet_RPI.nii.gz -inset mprage_bet.nii.gz		
		3dresample -orient RPI -prefix mprage_RPI.nii.gz -inset mprage.nii.gz
		
		# rename files
		rm mprage_bet.nii.gz
		rm mprage.nii.gz
		3dcopy mprage_bet_RPI.nii.gz mprage_bet.nii.gz
		3dcopy mprage_RPI.nii.gz mprage.nii.gz
		rm mprage_bet_RPI.nii.gz
		rm mprage_RPI.nii.gz
		
		3dAFNItoNIFTI -prefix mprage.nii.gz mprage_RPI_al+orig
		3dAFNItoNIFTI	-prefix mprage_bet.nii.gz brain_RPI_al+orig
		
		# run michael's normalization script, 
		rest_preprocessMprage -r MNI_2mm -n mprage.nii.gz -d n
		
		# clean up previous outputs, make tlrc folder
		rm -rf ${cwd}/${s}/mni/
		mkdir ${cwd}/${s}/mni/
		
		# move normalized stuff and GMmask to tlrc
		cp mprage* GM*res*al* brain* aseg* *.1D ${cwd}/${s}/mni/
		
		
		
		#
		# Step 2. Preprocessing functional rest data
		#
		cd ${cwd}/${s}/mni/
		cp ${cwd}/${s}/mprage_v6/rest_epi_RPI+orig* .
		
		#
	  	# preprocess with physio dat,run AFNI's automatic preprocess script. Regress out physio, WM and ventrical noisea	
	  	#
		if [ -f /Volumes/Serena/Rest/physio1D/${s}_RetroTS.slibase.1D ]; then
		afni_proc.py -bash -execute -out_dir afni_proc -scr_overwrite -subj_id ${s} -dsets rest_epi_RPI+orig.HEAD -blocks tshift volreg mask scale regress -do_block despike ricor -ricor_regs  /Volumes/Serena/Rest/physio1D/${s}_RetroTS.slibase.1D -ricor_regress_method 'per-run' -tshift_opts_ts -tpattern seq+z -mask_apply epi -regress_errts_prefix errts -regress_no_motion -regress_opts_3dD -GOFORIT 10
		
		#
		# preprocess without physiodata
		#
		else
		afni_proc.py -bash -execute -out_dir afni_proc -scr_overwrite -subj_id ${s} -dsets rest_epi_RPI+orig.HEAD -blocks tshift volreg mask scale regress -do_block despike -regress_motion_per_run -tshift_opts_ts -tpattern seq+z -mask_apply epi -regress_errts_prefix errts -regress_no_motion -regress_opts_3dD -GOFORIT 10		
		fi
		
		cp ${cwd}/${s}/mni/afni_proc/errts.${s}+orig* .
		
		cp ${cwd}/${s}/mni/afni_proc/dfile.rall.1D .
		
		@ANATICOR -ts errts.${s}+orig -motion dfile.rall.1D -polort 3 -aseg aseg_RPI_al+orig -prefix errts_anaticor -radius 30 -nuisance NBT.1D -no_ventricles -Rsq_WMe -coverage -verb
		
		#bandpass filter to remove drfiting and physio signal
		3dBandpass -prefix resid_bp 0.009 0.08 errts_anaticor+orig
		
		#mv ${cwd}/${s}/tlrc/afni_proc/resid_bp* .
		
		3dAFNItoNIFTI -float -prefix resid_bp.nii.gz resid_bp+orig

		rm resid_bp+orig*

		
		#Smooth only within GM mask
		3dBlurInMask -input resid_bp.nii.gz -FWHM 5 -mask GM_L_res_al+orig -preserve -prefix resid_bp_blh.nii.gz
		3dBlurInMask -input resid_bp_blh.nii.gz -FWHM 5 -mask GM_R_res_al+orig -preserve -prefix resid_bp_b.nii.gz
		3dcalc -a GM_R_res_al+orig -b GM_L_res_al+orig -expr 'a+b' -prefix GM_mask.nii.gz
		

		3dcopy resid_bp_b.nii.gz rest_preproc_native.nii.gz 
		# rest_preproc_native.nii.gz is the preprocess file in native space
		
		rm resid_bp_blh.nii.gz
		rm resid_bp_b.nii.gz
		
		

		#
		# Step 3. Warp into mni space
		#
		3dAFNItoNIFTI -prefix all_bet.nii.gz rest_epi_RPI+orig 
		
		fslmaths all_bet -Tmean func_mean
		bet func_mean func_bet
		flirt -in func_bet -ref mprage_bet -out func_to_mprage -omat func_to_mprage.mat -dof 12
		
		applywarp -i rest_preproc_native -r ~/standard/fsl_mni152/MNI152_T1_2mm.nii.gz -o rest_preproc_mni --premat=func_to_mprage.mat -w mprage_warpcoef	
		# rest_preproc_mni is the functional file in MNI space
		
	
		
		
		

	
	cd ${cwd}
done



